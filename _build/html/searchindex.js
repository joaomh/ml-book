Search.setIndex({"alltitles": {"AI playing games": [[2, "ai-playing-games"]], "Addition (+)": [[8, "addition"]], "Advanced Output Formatting (Revisiting for print() context):": [[10, "advanced-output-formatting-revisiting-for-print-context"]], "An Introduction to Machine Learning": [[0, "an-introduction-to-machine-learning"], [21, "an-introduction-to-machine-learning"]], "Anaconda": [[3, "anaconda"]], "Arbitrary Argument Lists": [[9, "arbitrary-argument-lists"]], "Arbitrary Keyword Arguments (**kwargs)": [[9, "arbitrary-keyword-arguments-kwargs"]], "Arbitrary Positional Arguments (*args)": [[9, "arbitrary-positional-arguments-args"]], "Arithmetic Operators in Python": [[8, "arithmetic-operators-in-python"]], "Array Methods and Attributes": [[7, "array-methods-and-attributes"]], "Arrays (from array module) and Numeric Data": [[7, "arrays-from-array-module-and-numeric-data"]], "Basic Concepts": [[1, "basic-concepts"]], "Basic Example:": [[8, "basic-example"]], "Basic Syntax": [[5, "basic-syntax"]], "Best Practices for Input/Output": [[10, "best-practices-for-input-output"]], "Bibliography": [[20, "bibliography"]], "Big Data": [[1, "big-data"], [12, "big-data"]], "Binary Types in Python": [[8, "binary-types-in-python"]], "Boolean Values": [[8, "boolean-values"]], "Boston House Prices": [[2, "boston-house-prices"]], "Build and preview the text locally": [[0, "build-and-preview-the-text-locally"]], "Built-in Data Types": [[8, "built-in-data-types"]], "Checking Types": [[8, "checking-types"]], "Command Line": [[5, "command-line"]], "Comments": [[5, "comments"]], "Common Dictionary Methods": [[7, "common-dictionary-methods"]], "Common List Methods": [[7, "common-list-methods"]], "Common Set Methods": [[7, "common-set-methods"]], "Common Tuples Methods": [[7, "common-tuples-methods"]], "Comparison (Relational) Operators": [[8, "comparison-relational-operators"]], "Computer Vision": [[17, "computer-vision"]], "Conditionals and Loops": [[6, "conditionals-and-loops"]], "Contribute": [[21, "contribute"]], "Conversion Examples:": [[8, "conversion-examples"]], "Creating Functions in Python": [[9, "creating-functions-in-python"]], "Creating Strings": [[8, "creating-strings"]], "Customer Clustering and Segmentation": [[2, "customer-clustering-and-segmentation"]], "Data Analysis": [[1, "data-analysis"]], "Data Analyst": [[1, "data-analyst"]], "Data Engineer": [[1, "data-engineer"]], "Data Preprocessing": [[13, "data-preprocessing"]], "Data Science Careers": [[1, "data-science-careers"]], "Data Scientist": [[1, "data-scientist"]], "Data Structures in Python": [[7, "data-structures-in-python"]], "Default Arguments": [[9, "default-arguments"]], "Defining a Function: The def Keyword": [[9, "defining-a-function-the-def-keyword"]], "Definition of Machine Learning": [[2, "definition-of-machine-learning"], [4, "definition-of-machine-learning"]], "Detailed Examples": [[8, "detailed-examples"]], "Dictionaries": [[7, "dictionaries"]], "Displaying Output: The print() Function": [[10, "displaying-output-the-print-function"]], "Division (/)": [[8, "division"]], "Docstrings: Documenting Your Functions": [[9, "docstrings-documenting-your-functions"]], "Escape Sequences in print():": [[10, "escape-sequences-in-print"]], "Essential Built-in Functions in Python": [[9, "essential-built-in-functions-in-python"]], "Example 1: Simple Function (No Parameters and No Explicit Return)": [[9, "example-1-simple-function-no-parameters-and-no-explicit-return"]], "Example 1: Simple if-elif-else Replacement": [[6, "example-1-simple-if-elif-else-replacement"]], "Example 2: Function with Parameters and Return": [[9, "example-2-function-with-parameters-and-return"]], "Example of Basic Operations with Numbers": [[8, "example-of-basic-operations-with-numbers"]], "Exponentiation (**)": [[8, "exponentiation"]], "Function Arguments (Parameters vs. Arguments)": [[9, "function-arguments-parameters-vs-arguments"]], "Fundamental Numeric Types": [[8, "fundamental-numeric-types"]], "Getting Input: The input() Function": [[10, "getting-input-the-input-function"]], "Google Colaboratory (Colab)": [[3, "google-colaboratory-colab"]], "Handling Numerical Input: Type Conversion is a Must!": [[10, "handling-numerical-input-type-conversion-is-a-must"]], "Handwritten Digit Recognition": [[2, "handwritten-digit-recognition"]], "How this repository is deployed": [[0, "how-this-repository-is-deployed"]], "How to Import Libraries": [[9, "how-to-import-libraries"]], "How to install a package using conda:": [[9, "how-to-install-a-package-using-conda"]], "How to install a package:": [[9, "how-to-install-a-package"]], "How to uninstall a package version:": [[9, "how-to-uninstall-a-package-version"]], "How to upgrade a package version:": [[9, "how-to-upgrade-a-package-version"]], "Import All: from module_name import *": [[9, "import-all-from-module-name-import"]], "Import with Alias: import module_name as alias": [[9, "import-with-alias-import-module-name-as-alias"]], "Importing Libraries in Python": [[9, "importing-libraries-in-python"]], "Indentation": [[5, "indentation"]], "Input and Output in Python": [[10, "input-and-output-in-python"]], "Installing Packages with pip": [[9, "installing-packages-with-pip"]], "Integer Division (//) - Floor Division": [[8, "integer-division-floor-division"]], "Introduction to Conditionals (if, else)": [[6, "introduction-to-conditionals-if-else"]], "Introduction to Machine Learning": [[4, "introduction-to-machine-learning"]], "Introduction to Python": [[11, "introduction-to-python"]], "Iris Classification": [[2, "iris-classification"]], "Jupyter Notebook": [[5, "jupyter-notebook"]], "Kaggle Kernels (Kaggle Notebooks)": [[3, "kaggle-kernels-kaggle-notebooks"]], "Key Characteristics of input():": [[10, "key-characteristics-of-input"]], "Key Concepts in Pattern Matching": [[6, "key-concepts-in-pattern-matching"]], "Key Parameters of print():": [[10, "key-parameters-of-print"]], "Keyword Arguments": [[9, "keyword-arguments"]], "Lambda Expressions": [[9, "lambda-expressions"]], "Large Language Models": [[19, "large-language-models"]], "License and Copyright Notice": [[21, "license-and-copyright-notice"]], "List Comprehensions": [[7, "list-comprehensions"]], "Lists": [[7, "lists"]], "Logical (Boolean) Operators": [[8, "logical-boolean-operators"]], "Loop Control: break and continue": [[6, "loop-control-break-and-continue"]], "Machine Learning": [[1, "machine-learning"]], "Machine Learning Engineer": [[1, "machine-learning-engineer"]], "Main Numeric Conversion Functions:": [[8, "main-numeric-conversion-functions"]], "Main String Operations and Methods": [[8, "main-string-operations-and-methods"]], "Modulo (%) - Remainder of Division": [[8, "modulo-remainder-of-division"]], "Multiplication (*)": [[8, "multiplication"]], "Natural Language Processing": [[18, "natural-language-processing"]], "Nested List Comprehensions": [[7, "nested-list-comprehensions"]], "Neural Networks": [[16, "neural-networks"]], "Notes on Variable Naming": [[8, "notes-on-variable-naming"]], "Null Variable (None)": [[8, "null-variable-none"]], "Numbers and Strings in Python": [[8, "numbers-and-strings-in-python"]], "Order of Precedence for Arithmetic Operators": [[8, "order-of-precedence-for-arithmetic-operators"]], "Other String Formatting (for reference)": [[8, "other-string-formatting-for-reference"]], "Others Arrays methods": [[7, "others-arrays-methods"]], "Packages and Libraries in Python": [[9, "packages-and-libraries-in-python"]], "Pattern Matching within a for Loop": [[6, "pattern-matching-within-a-for-loop"]], "Positional Arguments": [[9, "positional-arguments"]], "Precedence Example:": [[8, "precedence-example"]], "Prerequisites": [[2, "prerequisites"]], "Project": [[7, "project"]], "Projects": [[2, "projects"]], "References": [[21, "references"]], "Repetition Structures (Loops)": [[6, "repetition-structures-loops"]], "Role of the Data Team": [[1, "role-of-the-data-team"]], "Selective Import: from module_name import item1, item2": [[9, "selective-import-from-module-name-import-item1-item2"]], "Semi-Structured Data": [[1, "semi-structured-data"]], "Sentiment Analysis": [[2, "sentiment-analysis"]], "Sets": [[7, "sets"]], "Spotify Tracks Dataset": [[2, "spotify-tracks-dataset"]], "Standard Import: import module_name": [[9, "standard-import-import-module-name"]], "String Formatting with f-strings (Formatted String Literals)": [[8, "string-formatting-with-f-strings-formatted-string-literals"]], "Strings in Python": [[8, "strings-in-python"]], "Structured Data": [[1, "structured-data"]], "Subtraction (-)": [[8, "subtraction"]], "Summary and Next Steps": [[6, "summary-and-next-steps"]], "Summary of Python\u2019s Core Data Structures": [[7, "summary-of-python-s-core-data-structures"]], "Supervised Learning": [[14, "supervised-learning"]], "Task of Machine Learning": [[2, "task-of-machine-learning"], [4, "task-of-machine-learning"]], "Tech Skills": [[2, "tech-skills"]], "The Boolean Type (bool) in Python": [[8, "the-boolean-type-bool-in-python"]], "The Main Arithmetic Operators": [[8, "the-main-arithmetic-operators"]], "The Python Environment: Anaconda, Colab, and Kaggle": [[3, "the-python-environment-anaconda-colab-and-kaggle"]], "The for Loop": [[6, "the-for-loop"]], "The function-fitting paradigm": [[2, "the-function-fitting-paradigm"], [4, "the-function-fitting-paradigm"]], "The if Structure": [[6, "the-if-structure"]], "The if-elif-else Structure": [[6, "the-if-elif-else-structure"]], "The if-else Structure": [[6, "the-if-else-structure"]], "The match-case Statement": [[6, "the-match-case-statement"]], "The while Loop": [[6, "the-while-loop"]], "To make a change to the book and update https://joaomh.github.io/ml-book/": [[0, "to-make-a-change-to-the-book-and-update-https-joaomh-github-io-ml-book"]], "Tuples": [[7, "tuples"]], "Turing Test": [[2, "turing-test"], [4, "turing-test"]], "Type Casting": [[8, "type-casting"]], "Types of Arguments:": [[9, "types-of-arguments"]], "Types of Data": [[1, "types-of-data"]], "Unpacking Argument Lists": [[9, "unpacking-argument-lists"]], "Unpacking Dictionaries for Keyword Arguments (**)": [[9, "unpacking-dictionaries-for-keyword-arguments"]], "Unpacking Iterables for Positional Arguments (*)": [[9, "unpacking-iterables-for-positional-arguments"]], "Unstructured Data": [[1, "unstructured-data"]], "Unsupervised Learning": [[15, "unsupervised-learning"]], "Usage Examples:": [[8, "usage-examples"], [8, "id1"]], "Using Booleans in Conditionals (if/elif/else)": [[8, "using-booleans-in-conditionals-if-elif-else"]], "Using Lists as Queues": [[7, "using-lists-as-queues"]], "Using Lists as Stacks": [[7, "using-lists-as-stacks"]], "Using the del statement": [[7, "using-the-del-statement"]], "What Are Functions?": [[9, "what-are-functions"]], "What are Conditionals?": [[6, "what-are-conditionals"]], "What are Loops?": [[6, "what-are-loops"]], "What are packages?": [[9, "what-are-packages"]], "Where to Place Imports": [[9, "where-to-place-imports"]], "Why Import?": [[9, "why-import"]], "abs()": [[9, "abs"]], "add(value): This operation incorporates a single, new element into the set. If the element is already present, the set remains unchanged.": [[7, "add-value-this-operation-incorporates-a-single-new-element-into-the-set-if-the-element-is-already-present-the-set-remains-unchanged"]], "append(item): Adds a single item to the end of the list.": [[7, "append-item-adds-a-single-item-to-the-end-of-the-list"]], "append(x): Adds a single item x to the end of the array. The item must be of the array\u2019s typecode.": [[7, "append-x-adds-a-single-item-x-to-the-end-of-the-array-the-item-must-be-of-the-array-s-typecode"]], "break": [[6, "break"]], "clear(): Removes all items from the list, making it empty.": [[7, "clear-removes-all-items-from-the-list-making-it-empty"]], "clear(): Removes all key-value pairs from the dictionary.": [[7, "clear-removes-all-key-value-pairs-from-the-dictionary"]], "clear(): This operation removes all elements from the set, resulting in an empty set.": [[7, "clear-this-operation-removes-all-elements-from-the-set-resulting-in-an-empty-set"]], "continue": [[6, "continue"]], "copy(): Returns a shallow copy of the dictionary. This means a new dictionary is created, but nested mutable objects (like lists or other dictionaries) within the original will still be referenced by the copy.": [[7, "copy-returns-a-shallow-copy-of-the-dictionary-this-means-a-new-dictionary-is-created-but-nested-mutable-objects-like-lists-or-other-dictionaries-within-the-original-will-still-be-referenced-by-the-copy"]], "copy(): Returns a shallow copy of the list. This is important to avoid modifying the original list unintentionally.": [[7, "copy-returns-a-shallow-copy-of-the-list-this-is-important-to-avoid-modifying-the-original-list-unintentionally"]], "copy(): This operation creates a new set that is an exact duplicate of the original set. Changes made to the new set will not affect the original.": [[7, "copy-this-operation-creates-a-new-set-that-is-an-exact-duplicate-of-the-original-set-changes-made-to-the-new-set-will-not-affect-the-original"]], "count(value): Returns the number of times a value appears in the list.": [[7, "count-value-returns-the-number-of-times-a-value-appears-in-the-list"], [7, "id2"]], "count(x): Returns the number of times item x appears in the array.": [[7, "count-x-returns-the-number-of-times-item-x-appears-in-the-array"]], "difference(other_set) or -: This operation returns a new set containing all elements that are present in the first set but not in another specified set(s).": [[7, "difference-other-set-or-this-operation-returns-a-new-set-containing-all-elements-that-are-present-in-the-first-set-but-not-in-another-specified-set-s"]], "difference_update(other_set) or -=: This operation modifies the original set by removing all elements that are also present in another specified set(s). We can use the operador": [[7, "difference-update-other-set-or-this-operation-modifies-the-original-set-by-removing-all-elements-that-are-also-present-in-another-specified-set-s-we-can-use-the-operador"]], "discard(value): This operation removes a specified element from the set if it is present. Unlike remove, it does not raise an error if the element is not found.": [[7, "discard-value-this-operation-removes-a-specified-element-from-the-set-if-it-is-present-unlike-remove-it-does-not-raise-an-error-if-the-element-is-not-found"]], "extend(iterable): Adds all items from an iterable (like another list) to the end of the list.": [[7, "extend-iterable-adds-all-items-from-an-iterable-like-another-list-to-the-end-of-the-list"]], "extend(iterable): Appends all items from an iterable to the end of the array. Each item in the iterable must be of the array\u2019s typecode. The operation modifies the array in-place.": [[7, "extend-iterable-appends-all-items-from-an-iterable-to-the-end-of-the-array-each-item-in-the-iterable-must-be-of-the-array-s-typecode-the-operation-modifies-the-array-in-place"]], "float()": [[9, "float"]], "fromkeys(iterable, value=None): Creates a new dictionary with keys from the iterable and values set to value. If value is not specified, it defaults to None.": [[7, "fromkeys-iterable-value-none-creates-a-new-dictionary-with-keys-from-the-iterable-and-values-set-to-value-if-value-is-not-specified-it-defaults-to-none"]], "fromlist(list): Appends items from a standard Python list. Each item in the list must be of the array\u2019s typecode. The operation modifies the array in-place.": [[7, "fromlist-list-appends-items-from-a-standard-python-list-each-item-in-the-list-must-be-of-the-array-s-typecode-the-operation-modifies-the-array-in-place"]], "frozenset": [[7, "frozenset"]], "get(key, default_value=None): Returns the value for the specified key. If the key is not found, it returns default_value (which is None by default) instead of raising a KeyError.": [[7, "get-key-default-value-none-returns-the-value-for-the-specified-key-if-the-key-is-not-found-it-returns-default-value-which-is-none-by-default-instead-of-raising-a-keyerror"]], "index(value): Returns the index of the first occurrence of a value. Raises a ValueError if the value is not found.": [[7, "index-value-returns-the-index-of-the-first-occurrence-of-a-value-raises-a-valueerror-if-the-value-is-not-found"], [7, "id1"]], "index(x): Returns the index of the first occurrence of item x in the array. Raises a ValueError if the item is not found.": [[7, "index-x-returns-the-index-of-the-first-occurrence-of-item-x-in-the-array-raises-a-valueerror-if-the-item-is-not-found"]], "insert(i, x): Inserts item x at the specified index i. The item must be of the array\u2019s typecode. The operation modifies the array in-place.": [[7, "insert-i-x-inserts-item-x-at-the-specified-index-i-the-item-must-be-of-the-array-s-typecode-the-operation-modifies-the-array-in-place"]], "insert(index, item): Inserts an item at a specific index.": [[7, "insert-index-item-inserts-an-item-at-a-specific-index"]], "int()": [[9, "int"]], "intersection(other_set) or &: This operation returns a new set containing only the elements that are common to both the original set and another specified set(s).": [[7, "intersection-other-set-or-this-operation-returns-a-new-set-containing-only-the-elements-that-are-common-to-both-the-original-set-and-another-specified-set-s"]], "intersection_update(other_set) or &=: This operation modifies the original set to contain only the elements that are common to both the original set and another specified set(s).": [[7, "intersection-update-other-set-or-this-operation-modifies-the-original-set-to-contain-only-the-elements-that-are-common-to-both-the-original-set-and-another-specified-set-s"]], "isdisjoint(other_set): This operation checks if two sets have no elements in common. It returns True if they are disjoint, and False otherwise.": [[7, "isdisjoint-other-set-this-operation-checks-if-two-sets-have-no-elements-in-common-it-returns-true-if-they-are-disjoint-and-false-otherwise"]], "issubset(other_set) or <=: This operation checks if all elements of one set are also present in another set. It returns True if the first set is a subset of the second, and False otherwise.": [[7, "issubset-other-set-or-this-operation-checks-if-all-elements-of-one-set-are-also-present-in-another-set-it-returns-true-if-the-first-set-is-a-subset-of-the-second-and-false-otherwise"]], "issuperset(other_set) or >=: This operation checks if one set contains all the elements of another set. It returns True if the first set is a superset of the second, and False otherwise.": [[7, "issuperset-other-set-or-this-operation-checks-if-one-set-contains-all-the-elements-of-another-set-it-returns-true-if-the-first-set-is-a-superset-of-the-second-and-false-otherwise"]], "items(): Returns a new view of the dictionary\u2019s key-value pairs as tuples ((key, value)). This view is dynamic, meaning it reflects changes made to the dictionary.": [[7, "items-returns-a-new-view-of-the-dictionary-s-key-value-pairs-as-tuples-key-value-this-view-is-dynamic-meaning-it-reflects-changes-made-to-the-dictionary"]], "itemsize: An attribute that returns the size in bytes of one array item (e.g., 4 for a 'f' float, 8 for a 'd' double). This value is constant for a given array type.": [[7, "itemsize-an-attribute-that-returns-the-size-in-bytes-of-one-array-item-e-g-4-for-a-f-float-8-for-a-d-double-this-value-is-constant-for-a-given-array-type"]], "keys(): Returns a new view of the dictionary\u2019s keys. This view is dynamic, reflecting changes made to the dictionary.": [[7, "keys-returns-a-new-view-of-the-dictionary-s-keys-this-view-is-dynamic-reflecting-changes-made-to-the-dictionary"]], "len()": [[9, "len"]], "max()": [[9, "max"]], "min()": [[9, "min"]], "pop(): This operation don\u2019t requerie argument and removes and returns an arbitrary element from the set. Since sets are unordered, there\u2019s no way to predict which element will be removed. An error is raised if the set is empty.": [[7, "pop-this-operation-don-t-requerie-argument-and-removes-and-returns-an-arbitrary-element-from-the-set-since-sets-are-unordered-there-s-no-way-to-predict-which-element-will-be-removed-an-error-is-raised-if-the-set-is-empty"]], "pop([i]): Removes the item at the given index i and returns it. If no index is specified, it removes and returns the last item. Raises an IndexError if the array is empty or the index is out of bounds.": [[7, "pop-i-removes-the-item-at-the-given-index-i-and-returns-it-if-no-index-is-specified-it-removes-and-returns-the-last-item-raises-an-indexerror-if-the-array-is-empty-or-the-index-is-out-of-bounds"]], "pop([index]): Removes the item at the given index and returns it. If no index is specified, it removes and returns the last item.": [[7, "pop-index-removes-the-item-at-the-given-index-and-returns-it-if-no-index-is-specified-it-removes-and-returns-the-last-item"]], "pop(key, default_value_if_not_found): Removes the specified key from the dictionary and returns its corresponding value. If the key is not found, it returns default_value_if_not_found if provided; otherwise, it raises a KeyError.": [[7, "pop-key-default-value-if-not-found-removes-the-specified-key-from-the-dictionary-and-returns-its-corresponding-value-if-the-key-is-not-found-it-returns-default-value-if-not-found-if-provided-otherwise-it-raises-a-keyerror"]], "popitem(): Removes and returns an arbitrary key-value pair from the dictionary. As of Python 3.7+, it specifically removes and returns the last inserted key-value pair. Raises a KeyError if the dictionary is empty.": [[7, "popitem-removes-and-returns-an-arbitrary-key-value-pair-from-the-dictionary-as-of-python-3-7-it-specifically-removes-and-returns-the-last-inserted-key-value-pair-raises-a-keyerror-if-the-dictionary-is-empty"]], "print()": [[9, "print"]], "range()": [[9, "range"]], "remove(value): Removes the first occurrence of a specified value. Raises a ValueError if the value is not found.": [[7, "remove-value-removes-the-first-occurrence-of-a-specified-value-raises-a-valueerror-if-the-value-is-not-found"]], "remove(value): This operation removes a specified element from the set. If the element is not found in the set, it raises a KeyError.": [[7, "remove-value-this-operation-removes-a-specified-element-from-the-set-if-the-element-is-not-found-in-the-set-it-raises-a-keyerror"]], "remove(x): Removes the first occurrence of item x from the array. Raises a ValueError if the item is not found. The operation modifies the array in-place.": [[7, "remove-x-removes-the-first-occurrence-of-item-x-from-the-array-raises-a-valueerror-if-the-item-is-not-found-the-operation-modifies-the-array-in-place"]], "reverse(): Reverses the order of the array\u2019s items in-place.": [[7, "reverse-reverses-the-order-of-the-array-s-items-in-place"]], "reverse(): Reverses the order of the list\u2019s items in-place.": [[7, "reverse-reverses-the-order-of-the-list-s-items-in-place"]], "setdefault(key, default_value=None): Returns the value for the specified key. If the key is not found, it inserts the key with default_value (or None if not specified) into the dictionary and returns that default_value.": [[7, "setdefault-key-default-value-none-returns-the-value-for-the-specified-key-if-the-key-is-not-found-it-inserts-the-key-with-default-value-or-none-if-not-specified-into-the-dictionary-and-returns-that-default-value"]], "sort(): Sorts the list\u2019s items in-place in ascending order. You can use reverse=True for descending order.": [[7, "sort-sorts-the-list-s-items-in-place-in-ascending-order-you-can-use-reverse-true-for-descending-order"]], "str()": [[9, "str"]], "sum()": [[9, "sum"]], "symmetric_difference(other_set) or ^: This operation returns a new set containing all elements that are in either of two sets, but not in their intersection (i.e., elements unique to each set).": [[7, "symmetric-difference-other-set-or-this-operation-returns-a-new-set-containing-all-elements-that-are-in-either-of-two-sets-but-not-in-their-intersection-i-e-elements-unique-to-each-set"]], "symmetric_difference_update(other_set) or ^=: This operation modifies the original set to contain only the elements that are in either of the original set or another specified set, but not in their intersection.": [[7, "symmetric-difference-update-other-set-or-this-operation-modifies-the-original-set-to-contain-only-the-elements-that-are-in-either-of-the-original-set-or-another-specified-set-but-not-in-their-intersection"]], "tolist(): Converts the array into a regular Python list containing the same items.": [[7, "tolist-converts-the-array-into-a-regular-python-list-containing-the-same-items"]], "type()": [[9, "type"]], "union(other_set) or |: This operation returns a new set containing all unique elements from both the original set and another specified set(s).": [[7, "union-other-set-or-this-operation-returns-a-new-set-containing-all-unique-elements-from-both-the-original-set-and-another-specified-set-s"]], "update(): This operation adds all elements from an iterable (like another set, list, or tuple) into the original set. Duplicate elements are ignored": [[7, "update-this-operation-adds-all-elements-from-an-iterable-like-another-set-list-or-tuple-into-the-original-set-duplicate-elements-are-ignored"]], "update([other_dict_or_iterable]): Updates the dictionary with key-value pairs from other_dict_or_iterable (which can be another dictionary, or an iterable of key-value pairs), overwriting existing keys.": [[7, "update-other-dict-or-iterable-updates-the-dictionary-with-key-value-pairs-from-other-dict-or-iterable-which-can-be-another-dictionary-or-an-iterable-of-key-value-pairs-overwriting-existing-keys"]], "values(): Returns a new view of the dictionary\u2019s values. This view is dynamic, reflecting changes made to the dictionary.": [[7, "values-returns-a-new-view-of-the-dictionary-s-values-this-view-is-dynamic-reflecting-changes-made-to-the-dictionary"]], "\u201cTruthy\u201d and \u201cFalsy\u201d Examples:": [[8, "truthy-and-falsy-examples"]], "\u201cTruthy\u201d and \u201cFalsy\u201d Values (Boolean Evaluation of Other Types)": [[8, "truthy-and-falsy-values-boolean-evaluation-of-other-types"]], "\ud83d\udd39 bytearray": [[8, "bytearray"]], "\ud83d\udd39 bytes": [[8, "bytes"]], "\ud83d\udd39 memoryview": [[8, "memoryview"]]}, "docnames": ["README", "docs/01-intro/01-basic-concepts/basics", "docs/01-intro/01-basic-concepts/projects", "docs/01-intro/02-ambient/ambient", "docs/01-intro/intro", "docs/02-python/basics", "docs/02-python/control-flow/control-flow", "docs/02-python/data-structures/data-structures", "docs/02-python/data-types/data-types", "docs/02-python/func/func", "docs/02-python/input-output/input-output", "docs/02-python/python", "docs/03-big-data/data", "docs/04-prep/prep", "docs/05-supervised/supervised", "docs/06-unsupervised/unsupervised", "docs/07-neural/neural", "docs/08-cv/cv", "docs/09-nlp/nlp", "docs/10-llm/llm", "docs/bibliography", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["README.md", "docs/01-intro/01-basic-concepts/basics.md", "docs/01-intro/01-basic-concepts/projects.md", "docs/01-intro/02-ambient/ambient.md", "docs/01-intro/intro.md", "docs/02-python/basics.md", "docs/02-python/control-flow/control-flow.md", "docs/02-python/data-structures/data-structures.ipynb", "docs/02-python/data-types/data-types.md", "docs/02-python/func/func.md", "docs/02-python/input-output/input-output.md", "docs/02-python/python.md", "docs/03-big-data/data.md", "docs/04-prep/prep.md", "docs/05-supervised/supervised.md", "docs/06-unsupervised/unsupervised.md", "docs/07-neural/neural.md", "docs/08-cv/cv.md", "docs/09-nlp/nlp.md", "docs/10-llm/llm.md", "docs/bibliography.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 3, 5, 6, 8, 9, 10, 20], "0": [2, 4, 6, 7, 8, 9, 11, 21], "00": 7, "01": 7, "02d": 10, "06": [9, 10], "1": [2, 4, 7, 8, 10, 11, 20], "10": [6, 7, 8, 9, 10], "100": [7, 8], "1000": [2, 4], "1000000": 8, "11": [6, 7, 8], "12": [7, 8], "1200": [9, 10], "123": [7, 9, 10], "1234": 7, "1259": 7, "1260": 7, "1261": 7, "1262": 7, "1263": 7, "1264": 7, "1265": 7, "1266": 7, "1267": 7, "13": 8, "14": [7, 8, 9], "140": 8, "14159": [2, 4], "14159265": 8, "14294": [2, 4], "15": [7, 9, 10], "16": [7, 8, 9], "1720000000": 7, "1720005000": 7, "1720010000": 7, "1720015000": 7, "18": [6, 8, 11], "19": 9, "1950": [2, 4], "1959": [2, 4], "1980": 11, "1989": 11, "1991": 11, "1997": [20, 21], "2": [2, 4, 6, 7, 8, 10, 11], "20": [6, 7, 8, 9], "200": 6, "2009": [2, 4, 20, 21], "2012": [20, 21], "2015": [11, 20, 21], "2018": [20, 21], "2020": [2, 4, 20, 21], "2023": 9, "2025": [7, 9, 10], "21": [8, 11], "22": [8, 9, 10], "25": [6, 7, 8, 9, 10], "255": 8, "26": 7, "27": [7, 8], "28": [8, 9], "29": 8, "299": 7, "2f": [7, 8, 10], "2r": [2, 4], "3": [2, 3, 4, 6, 8, 9, 10, 11], "30": [6, 7, 8, 9], "300": 7, "301": 7, "303": 7, "304": 7, "31": 7, "32": [7, 10], "321": 7, "322": 7, "323": 7, "35": 7, "36": 7, "3d": 10, "3x3": 7, "4": [2, 4, 5, 6, 8, 9, 11, 21], "40": [7, 8, 9], "404": 6, "42": [6, 7, 8, 10, 11], "45": [7, 8], "49": 8, "5": [6, 7, 8, 9, 10], "50": [6, 7, 8, 10], "500": 6, "503": 6, "53981633974483": 9, "555": 7, "6": [6, 7, 8, 9, 10, 11], "60": 7, "64": 7, "65685": 8, "7": [6, 8, 9], "70": [6, 7], "75": [6, 8, 10], "78": 9, "8": [8, 9, 11], "80": 7, "8571": 8, "88": 7, "9": [3, 7, 8, 9, 10, 11], "90": [6, 7], "9780134610993": 20, "9780262039246": 20, "9780387848846": 20, "9780596521974": 20, "9781449338770": 20, "9781491912300": 20, "9781491946251": 20, "9781593276034": 20, "99": [7, 8], "A": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20], "And": [2, 4], "As": [1, 9], "At": 1, "BY": 21, "Be": 7, "But": 8, "By": [1, 7, 9, 10], "For": [1, 2, 4, 6, 7, 11, 21], "IN": 9, "If": [6, 9, 10, 21], "In": [1, 2, 4, 5, 6, 7, 8, 9, 10, 21], "It": [1, 3, 5, 6, 8, 9, 11], "Its": 7, "NOT": [2, 4, 9], "No": [3, 7, 10, 20], "Not": [7, 8], "On": 20, "Or": [2, 4, 5], "That": [0, 2, 4, 8, 11], "The": [0, 1, 11, 20, 21], "Their": 1, "There": [2, 4, 5, 8, 9], "These": [1, 5, 7, 8, 9, 10], "To": [5, 8, 9], "Will": 8, "With": [2, 4, 8], "_": [2, 4, 6, 7, 8, 9], "__add__": 7, "__and__": 7, "__class__": 7, "__class_getitem__": 7, "__contains__": 7, "__delattr__": 7, "__delitem__": 7, "__dir__": 7, "__doc__": [7, 9], "__eq__": 7, "__format__": 7, "__ge__": 7, "__getattribute__": 7, "__getitem__": 7, "__getnewargs__": 7, "__getstate__": 7, "__gt__": 7, "__hash__": 7, "__iadd__": 7, "__iand__": 7, "__imul__": 7, "__init__": [7, 11], "__init_subclass__": 7, "__ior__": 7, "__isub__": 7, "__iter__": 7, "__ixor__": 7, "__le__": 7, "__len__": 7, "__lt__": 7, "__main__": 7, "__mul__": 7, "__name__": 7, "__ne__": 7, "__new__": 7, "__or__": 7, "__rand__": 7, "__reduce__": 7, "__reduce_ex__": 7, "__repr__": 7, "__reversed__": 7, "__rmul__": 7, "__ror__": 7, "__rsub__": 7, "__rxor__": 7, "__setattr__": 7, "__setitem__": 7, "__sizeof__": 7, "__str__": 7, "__sub__": 7, "__subclasshook__": 7, "__xor__": 7, "_allow_stdin": 7, "_build": 0, "_input_request": 7, "_parent_id": 7, "abc": [8, 11], "abil": [2, 4, 10, 11], "abnt": 5, "about": [2, 3, 4, 6, 7, 9, 11], "abov": 5, "absenc": 8, "absolut": 9, "abstract": 9, "academ": 3, "acceler": 3, "accept": 9, "access": [1, 3, 7, 8, 9, 21], "accuraci": 1, "achiev": [2, 4], "across": [1, 7], "action": [0, 1, 2, 4, 6, 7, 8, 21], "activ": [3, 6, 7], "actual": [1, 2, 4, 9], "ad": [6, 7, 9], "adapt": [2, 4, 20, 21], "add": [8, 9], "add_book": 7, "add_lambda": 9, "add_regular": 9, "address": [1, 7], "adult": [6, 11], "advanc": [1, 7], "advantag": [3, 9], "after": [2, 3, 4, 6, 7, 9], "ag": [6, 7, 8, 9, 10, 11], "against": 6, "age_int": 10, "age_str": 10, "agent": [2, 4], "ago": 7, "aim": [3, 21], "al": [2, 4, 21], "alan": [2, 4], "algebra": 2, "algorithm": [1, 2, 4, 8, 21], "alic": [6, 7, 8, 9], "align": [1, 8, 10], "all": [3, 6, 8, 21], "all_fruit": 7, "all_item": 7, "all_kei": 7, "all_thre": 7, "all_valu": 7, "allow": [1, 3, 5, 6, 7, 8, 9, 10, 11], "almost": 3, "alon": 1, "along": 3, "alreadi": [8, 9], "also": [3, 5, 8, 9, 21], "alter": 8, "altern": 7, "although": 5, "altura": 8, "alwai": [4, 8, 9, 10], "am": 8, "amount": [1, 3], "an": [2, 3, 4, 5, 6, 8, 9, 10, 11, 20], "ana": 9, "anaconda": 9, "anaconda3": 7, "analysi": [3, 4, 5, 9], "analyt": [1, 3], "analyz": [1, 3], "ani": [1, 6, 7, 8, 9], "anim": 11, "anomali": [2, 4], "anonym": [9, 11], "anoth": [3, 8], "another_data": 7, "another_tupl": 7, "answer": [2, 4, 6, 8], "anticip": 10, "anyth": [6, 7, 8], "apart": 21, "append": 8, "appl": [6, 7], "applic": [1, 3, 21], "approach": [1, 3, 20, 21], "ar": [1, 2, 3, 4, 5, 8, 10, 11, 21], "area": [2, 3, 4, 9], "aren": 3, "arg": 7, "arg1": 9, "arg2": 9, "argument": [10, 11], "arithmet": [], "around": [2, 4], "arr": 9, "arrai": 9, "arrang": 3, "arthur": [2, 4], "artifici": [5, 20, 21], "artist": [7, 9], "ask": [2, 4, 6], "aspect": [1, 9], "aspir": 21, "asset": 21, "assign": [7, 8], "associ": 7, "assum": 7, "attempt": 7, "attribut": [9, 11, 21], "attributeerror": 7, "audio": [1, 8], "augment": 21, "author": 7, "autom": [1, 2, 4, 5, 6], "automat": [0, 7, 9, 10], "autonom": [2, 4], "avail": [7, 9], "averag": [1, 6, 9], "avoid": [6, 9], "aw": 2, "b": [5, 6, 7, 8, 9, 20], "b001": 7, "back": [0, 7, 9, 10], "backbon": 8, "backslash": 10, "banana": [6, 7], "barto": [20, 21], "base": [1, 2, 3, 4, 6, 7, 9, 20], "basi": 8, "basic": [6, 7, 9, 10, 21], "batteri": 3, "becaus": [1, 8, 9], "becom": [6, 8, 21], "been": [1, 7, 9], "befor": [7, 8, 9], "begin": [1, 7, 8, 9, 10], "behavior": [1, 2, 4, 7, 8], "being": [2, 4, 8], "below": [1, 2, 4, 5, 9], "benefit": 9, "berlin": 9, "berri": 7, "best": [1, 3, 11], "better": 7, "between": [2, 4, 7, 8, 9, 10], "beyond": 7, "bi": 1, "bibliographi": 21, "big": [4, 20, 21], "binari": [7, 9], "bind": 11, "biographi": 21, "bit": 7, "block": [5, 6, 7, 9, 10], "blue": 7, "blueberri": 7, "bob": [7, 9], "bodi": 9, "book": [2, 4, 7, 8, 20, 21], "book_id": 7, "book_sales_count": 7, "books_inventori": 7, "bookstor": 7, "bool": [], "boolean": [7, 10], "boston": 7, "both": 8, "br": 20, "brace": [7, 8, 10], "bracket": 7, "branch": 0, "brand": 9, "brazil": 10, "break": 7, "broader": 1, "browser": 3, "buffer": 7, "buffer_info": 7, "bug": 9, "build": [1, 2, 4, 7, 9], "built": [3, 7, 10], "bunch": [2, 4], "bundl": 21, "busi": 1, "byte": [], "byteswap": 7, "c": [1, 6, 7, 8, 9, 11], "calcul": [2, 4, 6, 8, 9], "calculation1": 8, "calculation2": 8, "calculation3": 8, "calculu": 2, "call": [3, 6, 7, 8, 9, 10, 11], "came": 9, "can": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 21], "can_driv": 8, "can_travel": 8, "cannot": [2, 4, 7, 8, 9, 10], "capabl": [1, 2, 3, 4, 10, 11], "capit": [7, 8, 9], "captiv": 21, "captur": 6, "care": [6, 7], "carl": 7, "carla": 9, "carlo": [2, 4, 9, 10], "case": [2, 3, 4, 7, 8, 9], "cassandra": 1, "catch": 6, "categor": 1, "categori": [1, 7], "caus": [5, 6, 7, 8, 9], "caution": [8, 9], "cc": 21, "cell": [5, 7], "celsiu": 10, "center": [2, 4], "certain": [6, 9], "chage": 7, "challeng": 1, "chamber": [20, 21], "chang": [3, 5, 8, 9], "changeabl": 7, "channel": 21, "charact": [7, 8, 9, 10], "characterist": [7, 9, 11], "charli": 9, "chart": 1, "check": [2, 4, 6, 11, 21], "cherri": [6, 7], "child": 6, "choic": [1, 7], "choos": [1, 3, 7, 11], "christma": 11, "cidad": 8, "circl": [2, 4, 9], "circle_point": [2, 4], "circumst": [2, 4], "citi": [6, 7, 9, 10], "clarifi": 1, "clariti": [8, 9], "class": [2, 4, 7, 8, 9, 10, 11], "classic": 5, "classif": 1, "classifi": [2, 4, 8], "clean": [1, 6, 7], "cleaner": 9, "clear": [5, 10, 20], "clearli": 1, "cli": 0, "clone": 0, "cloud": [2, 3], "cluster": 1, "cmd": 5, "code": [2, 3, 4, 5, 6, 7, 8, 9, 11], "coder": 7, "coder123": 7, "colab": [], "collabor": [3, 9], "collect": [1, 3, 6, 7, 9], "colon": [7, 9], "color": [7, 10], "column": 1, "column1": 10, "com": [0, 7, 10, 20], "combin": [3, 8, 9, 10, 11], "combined_fruit": 7, "come": [1, 2, 3, 4, 6, 7, 9], "comma": [7, 10], "command": 3, "comment": 9, "commit": 0, "common": [1, 5, 6, 8, 9], "common_ab": 7, "common_abc": 7, "common_oper": 7, "commonli": [5, 9], "commun": [1, 2, 3, 4, 8, 10], "compactli": 7, "compar": [6, 8], "competit": 3, "compil": 11, "complet": [3, 6, 21], "complex": [1, 3, 5, 6, 7, 8, 9, 10, 11, 21], "complex_express": 8, "compon": [3, 9, 11], "comprehend": 21, "comprehens": [3, 9], "compress": [2, 4], "comput": [1, 2, 3, 4, 7, 20, 21], "computation": 3, "concaten": 10, "concept": [2, 4], "concern": 3, "concis": [7, 8, 9, 10, 20], "conclus": [2, 4], "conda": 3, "condit": [7, 9, 11], "configur": 3, "conflict": [3, 9], "confus": 1, "connect": 3, "consist": 7, "consol": [9, 10], "construct": 1, "constructor": 7, "consum": 3, "consumpt": 21, "contain": [1, 2, 4, 5, 6, 8, 9], "content": [1, 7, 8, 21], "context": [3, 8], "continu": [1, 10], "contribut": 1, "control": [3, 8, 9, 10, 11], "convent": 9, "convers": 9, "convert": [8, 9, 10], "coordin": 7, "copi": [0, 3, 8], "copied_dict": 7, "core": [1, 9, 21], "correct": 5, "correctli": [5, 9, 10], "correspond": [2, 4, 6, 9], "cosmo": 7, "cost": 3, "count": [6, 9], "countdown": 9, "counter": 6, "countri": 10, "cours": [7, 20], "cover": [6, 10, 21], "crash": [7, 20], "creat": [1, 2, 3, 4, 6, 10, 11], "create_person": 9, "creation": [7, 11], "criterion": 9, "critic": [1, 10], "cross": 3, "crucial": [1, 3, 6, 7, 9, 10], "ctrl": 5, "ctype": 11, "cube": 8, "curli": [7, 8, 10], "currenc": 8, "current": [6, 7, 9], "current_count": 7, "current_task": 7, "current_timestamp": 7, "curv": 3, "custom": [1, 3, 4, 7, 10], "customer_queu": 7, "customer_service_queu": 7, "customiz": 3, "cycl": 8, "cython": 11, "cz18": 20, "d": [6, 8], "dados_byt": 8, "dados_mutavei": 8, "dai": [1, 7, 8, 10], "daili": 7, "daily_sales_arrai": 7, "daily_sales_quant": 7, "dark": 7, "dashboard": 1, "data": [2, 3, 4, 5, 6, 9, 10, 11, 20, 21], "databas": [1, 7], "dataset": [1, 3, 4], "date": [1, 7, 9, 10], "datetim": 9, "david": [7, 9], "de": 7, "deal": [2, 3, 4, 6, 9], "debug": 9, "debugg": 3, "decim": [8, 9, 10], "decis": [1, 2, 4, 6, 21], "declar": 8, "decrement": 9, "deep": 3, "deepli": 6, "def": [6, 7, 11], "default": [8, 10], "defin": [1, 3, 5, 6, 7, 8, 21], "definit": [7, 9, 20], "delet": 7, "deliv": 1, "demand": 1, "demo": 7, "demonstr": [7, 9], "depend": [3, 7, 8, 9], "deploi": 3, "dequ": 7, "dequeu": 7, "describ": [1, 2, 4], "descript": [1, 8, 9, 10], "design": [1, 3, 7, 9], "desir": [2, 4, 8], "desktop": 3, "detach": 3, "detail": [7, 9], "detect": [1, 2, 4], "determin": [7, 8, 9], "develop": [1, 3, 9, 11], "devic": 1, "dict": [7, 8, 9], "dict_item": 7, "dict_kei": 7, "dict_valu": 7, "dictionari": [6, 8], "didn": 8, "diff_ab": 7, "diff_abc": 7, "diff_oper": 7, "differ": [1, 2, 3, 4, 6, 8, 9, 11], "differenti": 9, "difficult": [1, 9], "dir": 7, "direct": [3, 5, 7, 9], "directli": [5, 7, 9, 10], "disadvantag": [3, 9], "discard": 8, "disconnect": 3, "discourag": 9, "discov": 1, "disk": 3, "displai": [6, 7, 8, 9], "display_menu": 7, "distanc": [2, 4], "distinct": [1, 7], "distribut": [2, 3, 4], "divers": 1, "divid": [8, 9], "divis": [], "do": [4, 6, 7, 8], "dobrado": 11, "doc": 3, "docstr": 5, "document": [5, 7], "doe": [1, 2, 4, 5, 6, 8, 9], "does_not_have_passport": 8, "doesn": [1, 6, 9], "domain": 1, "don": [3, 6, 9], "done": [8, 10], "doubl": 8, "doubt": 8, "down": 8, "download": 3, "dramat": 9, "draw": [2, 4], "drink": 6, "drive": [1, 2, 3, 4, 6, 8], "driven": [1, 3], "dry": 9, "dummi": 7, "duplic": 9, "dure": [7, 11], "dutch": 11, "dynam": [9, 11], "e": [1, 2, 4, 6, 8, 9, 10, 20], "e_i": [2, 4], "each": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 21], "easi": [1, 3, 7, 10, 11], "easier": 9, "easili": [1, 3, 7], "ebsgoaeacaaj": 20, "ecosystem": [1, 3, 7], "edit": [5, 20, 21], "editor": 3, "educ": 3, "effect": [1, 7, 10, 20], "effici": [1, 7, 8, 9], "elderberri": 7, "eleg": [6, 7], "elegantli": 6, "element": [1, 6, 9, 20], "elif": [7, 9], "elimin": 9, "els": [2, 4, 7, 9, 11], "email": [1, 7, 10], "emb": [8, 10], "embark": 21, "embed": 8, "emili": 7, "emphas": 10, "employe": 1, "empow": 21, "empti": 8, "empty_dict": 7, "empty_list": 7, "empty_set": 7, "empty_tupl": 7, "enabl": 1, "encapsul": 11, "enclos": 7, "encount": 7, "end": [3, 8, 9, 10], "endian": 7, "endswith": 8, "engag": 21, "engin": [7, 21], "enough": 7, "enqueu": 7, "ensur": [1, 3, 7, 8], "enter": [5, 6, 7, 10, 11], "entir": [3, 9], "entri": 21, "env": 9, "environ": [2, 4, 5, 9], "eoferror": 7, "ephemer": 3, "epoch": 7, "equal": [6, 8], "equat": 3, "equival": [8, 9], "eric": 7, "error": [2, 4, 5, 6, 8, 9, 10], "esc": 5, "especi": [3, 5, 6, 10], "essenti": [1, 3, 8], "establish": 4, "estim": [2, 4], "estudant": 8, "et": [2, 4, 21], "etc": [3, 7, 9], "evalu": [], "even": [1, 6, 7, 8, 10], "even_numb": [8, 9], "even_squar": 7, "everi": 9, "everyon": 21, "everyth": 9, "everywher": [1, 9], "evid": 1, "exact": [3, 8], "exactli": [6, 9], "exampl": [1, 2, 4, 5, 7, 10, 11], "exce": 7, "excel": [1, 3, 6], "except": [7, 10], "exclus": [6, 8], "execut": [5, 6, 7, 9, 11], "exemplo": 11, "exercis": 21, "exit": [6, 7], "expand": 1, "expect": [1, 7, 9, 10], "experi": [1, 2, 3, 4, 21], "experiment": 3, "explain": [5, 9], "explan": [8, 9], "explanatori": 5, "explicit": [2, 4, 6], "explicitli": [2, 4, 7, 8, 9, 10], "explor": [1, 2, 3, 8], "exploratori": 1, "exponenti": [], "express": [6, 7, 8, 10], "extens": 3, "extract": [1, 7, 9], "extrapol": [2, 4], "extrem": [6, 9], "f": [0, 2, 4, 6, 9, 10, 11], "f001": 7, "facilit": [8, 9], "facto": 7, "fahrenheit": 10, "fail": 6, "fair": 3, "falar": 11, "fals": [6, 8, 9, 10], "falsehood": 8, "familiar": 1, "famou": 9, "fantasi": 7, "far": 7, "fascin": 21, "fast": [7, 9], "faster": [3, 7], "favorit": 10, "favorite_color": 10, "featur": [2, 3, 4, 7, 9], "feedback": [1, 2, 4, 21], "few": [1, 3], "fewer": 7, "field": [1, 2, 4], "fifo": 7, "fig": 7, "file": [0, 1, 7, 8, 9, 10], "fill": 10, "filter": [2, 4, 7, 9, 11], "final": [3, 6], "financi": 21, "find": [0, 1, 2, 4, 6, 21], "first": [1, 2, 4, 6, 8, 9, 10, 11], "first_condit": 6, "first_fruit": 7, "fit": [1, 6], "fix": [1, 7, 21], "flatten": 7, "flattened_list": 7, "flexibl": [1, 3, 7, 11], "flexibli": 8, "float": [8, 10], "flow": [6, 8, 9], "fluent": 20, "flush": [9, 10], "focu": [1, 3, 9], "focus": 1, "follow": [0, 2, 4, 6, 7, 8, 9, 21], "font_siz": 7, "forc": 8, "forcibli": 10, "forg": 9, "fork": 3, "form": [1, 2, 4, 8, 9], "formal": 9, "format": [1, 7, 9], "fortun": 3, "found": 6, "foundat": [1, 21], "frac": [2, 4], "fraction": 8, "framework": 1, "free": [3, 21], "frequent": [1, 9], "friedman": 20, "friendli": 10, "from": [1, 2, 3, 4, 5, 6, 8, 10, 21], "frombyt": 7, "fromfil": 7, "fromunicod": 7, "frontend": 7, "frontier": 21, "frozenset": 8, "fruit": [6, 7], "fruits_list": 7, "fruits_set": 7, "full": [3, 7, 9], "fun": 8, "function": [6, 7, 11], "function_nam": 9, "fundament": [1, 6, 7, 9, 10], "further": 1, "futur": 9, "g": [1, 6, 8, 9, 10, 20], "gain": 10, "game": 4, "gear": 3, "gener": [1, 2, 3, 4, 6, 7, 9], "generate_report": 7, "genr": 7, "genre_sales_count": 7, "genres_set": 7, "get": [0, 1, 3, 8, 9], "get_min_max": 7, "get_par": 7, "ghp": 0, "git": 0, "github": 21, "give": [2, 4, 9, 10, 21], "given": [2, 4, 6, 8, 9], "glean": 1, "global": 7, "glue": 11, "go": [2, 5], "goal": [2, 4, 21], "goe": [9, 10], "good": [6, 8, 9], "goodby": 7, "googl": 20, "gpu": 3, "grade": [6, 7, 9], "granular": 6, "grape": 7, "graph": [1, 9], "graphic": 3, "great": 8, "greater": [7, 8, 11], "greatli": 5, "green": 7, "greet": 9, "greet_peopl": 9, "greet_person": 9, "greet_with_default": 9, "grid": 7, "group": [1, 2, 4, 8], "grow": [1, 7], "guarante": 3, "guard": 6, "gui": 3, "guid": [0, 10, 20, 21], "guidanc": [2, 4], "guido": 11, "h": [8, 20], "ha": [0, 1, 6, 7, 8, 9, 10], "hadoop": [1, 20], "hand": [20, 21], "handl": [0, 1, 3, 6, 7, 8, 11], "handle_http_statu": 6, "hard": [2, 4], "harder": 9, "hardwar": 3, "has_driver_licens": 8, "has_passport": 8, "has_sun": 8, "hashabl": 7, "hasti": [2, 4, 20, 21], "hat": [2, 4], "have": [1, 2, 3, 4, 6, 8, 9, 21], "he": [10, 11], "heavi": 3, "height": 8, "hel": 8, "hello": [5, 8, 9, 10, 11], "help": [1, 3, 4, 5, 9, 21], "helper": 7, "here": [0, 2, 6, 8, 9, 11], "heterogen": [6, 7], "hexadecim": 9, "hi": [2, 4], "hidden": [1, 2, 4], "high": 5, "higher": 9, "highli": [1, 7], "hill": 20, "histori": 7, "hobbi": [8, 11], "hold": [0, 7], "homogen": 7, "host": 3, "hot": [6, 8], "hous": 4, "how": [1, 6, 8, 10], "howev": [1, 9, 21], "htf09": 20, "html": 0, "http": [6, 20], "huge": 3, "human": [1, 2, 4], "hybrid": [2, 4], "hypothet": 8, "i": [1, 2, 3, 4, 5, 6, 8, 9, 11, 21], "id": [3, 7, 9, 20], "idad": [8, 11], "idea": [2, 4], "ideal": [0, 3, 7, 11], "ident": 6, "identifi": [1, 7, 9], "ignor": 5, "imag": [1, 2, 4, 8], "imagin": [1, 6], "immedi": [3, 6, 9, 10], "immut": [7, 8, 9], "immutable_set": 7, "impact": 1, "implement": [1, 7, 9, 21], "implicitli": 9, "import": [0, 2, 4, 6, 8, 10], "impress": 1, "improv": [2, 4], "inact": 3, "inadequ": 1, "includ": [1, 3, 7, 9], "inclus": 6, "incorrect": 5, "increas": 9, "incredibli": 7, "increment": [6, 9], "indent": 9, "index": [8, 9], "indic": [8, 9], "individu": [7, 9], "industri": 1, "ineffici": 7, "infer": 20, "infin": 8, "infinit": 6, "info": 9, "inform": [0, 1, 6, 7, 9, 10], "infrastructur": [1, 3], "inherit": 11, "inici": 7, "initi": 7, "initial_scor": 7, "inlin": 9, "inner": 7, "input": [2, 4, 7, 8, 9, 11], "inquiri": 7, "insert": [5, 10], "insid": [2, 4, 8, 9], "insight": [1, 3, 21], "inspect": 1, "instal": [0, 3], "instead": [2, 4, 6], "instruct": 0, "int": [7, 8, 10, 11], "integ": [1, 7, 9, 10], "integr": [3, 11], "intellig": [5, 20, 21], "intend": 10, "intens": 3, "interact": [1, 2, 3, 4, 5, 10], "interest": 1, "interfac": [3, 7], "intern": [6, 9, 21], "internet": 3, "interpret": [1, 3, 5, 7], "interrog": [2, 4], "intervent": 1, "intro": [], "introduc": [1, 8], "introduct": 20, "intuit": [1, 5, 9], "invalid": 7, "invalid_funct": 9, "inventori": 7, "invert": 8, "involv": [1, 7, 8, 10], "ipykernel": 7, "is_dai": 8, "is_rain": 8, "isbn": 20, "isdisjoin": 7, "isol": 3, "issu": 7, "isuperset": 7, "item": [6, 9, 10], "item1": 7, "item2": 7, "item3": 7, "iter": 6, "its": [1, 2, 3, 4, 6, 8, 9, 11, 21], "itself": [3, 7], "j": [7, 20], "jargon": 1, "java": [1, 11], "joao": 11, "john": 7, "join": 7, "journei": 2, "jo\u00e3o": [8, 9], "json": 1, "jump": 6, "jupyt": [0, 3], "jupyterlab": 3, "just": [1, 2, 3, 4, 8, 9], "jython": 11, "kafka": 1, "kaggl": [], "kei": [1, 2, 3, 4, 9], "kept": 7, "kera": 3, "kernel": 7, "kernelbas": 7, "key1": 7, "key2": 7, "keyboard": 5, "keyword": 7, "kind": [2, 4, 9], "know": [8, 9], "knowledg": [1, 2], "known": 11, "kofptaeacaaj": 20, "l": 20, "lab": 3, "label": [2, 4], "lack": 3, "lambda": [7, 11], "landscap": [1, 21], "languag": [1, 2, 3, 4, 5, 7, 8, 11, 21], "laptop": [9, 10], "larg": [1, 2, 3, 4, 7, 9, 21], "larger": 5, "largest": 9, "last": 8, "last_fruit": 7, "last_login": 7, "last_task": 7, "last_upd": 7, "late": 11, "later": 10, "launch": 3, "layout": [5, 10], "lead": 10, "learn": [3, 9, 10, 20], "least": 8, "left": [7, 8], "legaci": 8, "legal": 6, "len": [7, 8], "length": [7, 8, 9], "less": [6, 7, 8], "let": [1, 2, 4, 5, 6, 8], "letter": 8, "level": [5, 7, 8], "leverag": [1, 7, 10], "li": [2, 4], "lib": 7, "librari": [3, 7, 20], "life": [2, 4], "lifo": 7, "lighter": [3, 9], "like": [1, 3, 6, 8, 9, 10, 11], "limit": [3, 7, 9, 11], "line": [3, 7, 8, 9, 10], "linear": 2, "link": [2, 4, 11], "linux": [3, 5], "list": [6, 8, 11], "lista": 11, "liter": [6, 10], "live": [3, 9], "ll": [8, 10, 21], "load": 3, "local": 3, "locat": [2, 4, 10], "logic": [6, 9], "london": [6, 7], "long": [6, 9, 10], "longer": [3, 9], "look": 10, "lookup": 7, "loop": [7, 9, 11], "lord": 7, "lose": 9, "loss": 8, "low": [7, 8], "lower": [7, 8], "lowercas": [8, 9], "lstrip": 8, "m": [5, 20], "mac": 5, "machin": [3, 7, 9, 20], "maco": 3, "made": 20, "mai": [1, 2, 3, 4, 9], "main": [0, 1, 5, 7, 11, 21], "main_set": 7, "maintain": [1, 7], "mainten": 9, "major": 7, "make": [1, 2, 3, 4, 6, 8, 9, 10, 11, 21], "male": 7, "manag": [3, 7, 9], "manage_customer_queu": 7, "mango": 7, "mani": [3, 7, 8, 9], "manipul": [2, 4, 7, 8, 9], "map": [2, 4, 7, 8, 9, 11], "maria": 9, "markdown": [5, 8], "marker": 1, "market": 1, "martin": 7, "massiv": 1, "master": [1, 3, 8, 10], "mat15": 20, "match": 9, "materi": [3, 21], "math": [2, 4, 7, 9, 21], "mathbb": [2, 4], "mathbf": [2, 4], "mathcal": [2, 4], "mathemat": [7, 8, 9, 10], "matlab": 3, "matplotlib": [2, 3, 9], "matric": 7, "matrix": 7, "matter": [9, 10], "matth": [7, 11, 20, 21], "max": 7, "max_val": 7, "maximum": 7, "mayb": 8, "mcgraw": 20, "me": 21, "mean": [2, 4, 8, 11], "meaning": 1, "measur": [2, 4], "media": [1, 20], "mem": 8, "member": 21, "membership": 7, "memori": [3, 7, 8], "mensagem": [8, 11], "menu": 7, "messag": [6, 8], "met": 6, "method": [2, 4, 10, 11], "metric": [1, 2, 4], "might": [3, 6, 7], "million": 1, "min": 7, "min_val": 7, "mind": 8, "mine": 20, "minha_string1": 8, "minha_string2": 8, "minha_string3": 8, "miniconda": [3, 9], "minor": 11, "miss": 9, "mit": 20, "mit97": 20, "mitchel": [20, 21], "mix": [1, 6, 7, 10], "mixed_data": 6, "mixed_list": 7, "ml": [3, 7], "mode": 3, "model": [1, 2, 3, 4, 21], "modern": [8, 20], "modif": 7, "modifi": [3, 9], "modul": 9, "modular": 9, "modulo": [], "mongodb": 1, "mont": [2, 4], "month": 10, "more": [1, 2, 3, 5, 6, 7, 8, 9, 10, 21], "more_detail": 7, "more_item": 7, "morn": 9, "most": [1, 2, 3, 4, 6, 7, 8, 9, 10], "move": [2, 3, 4, 6, 7, 10], "msg": 7, "much": [1, 2, 3, 6], "multi": [5, 11], "multipl": [6, 7, 9, 10], "multipli": [8, 9], "must": [6, 8, 9], "mutabl": 8, "mutable_default": 7, "my": [7, 8, 9, 21], "my_array_int": 7, "my_data": 7, "my_dict": 7, "my_float_arrai": 7, "my_int_arrai": 7, "my_item": 7, "my_list": [7, 8], "my_numb": 7, "my_set": 7, "my_tupl": 7, "myenv": 3, "n": [0, 2, 3, 4, 7, 8, 9, 10], "n_max": [2, 4], "name": [1, 6, 7, 9, 10, 11], "name1": 8, "name2": 8, "namespac": 9, "narr": 3, "nativ": 9, "natur": [1, 2, 4, 7, 21], "navig": [1, 3, 21], "nberri": 7, "nc": 21, "ncheck": 7, "ndarrai": 7, "nearest": 8, "neatli": 1, "necessari": [9, 10, 21], "need": [1, 2, 3, 4, 6, 7, 9, 10], "neg": [7, 8], "nest": 6, "nested_list": 7, "nested_set": 7, "netflix": 1, "network": [1, 7, 8, 10, 21], "neural": [1, 21], "neven": 9, "never": 7, "new": [2, 3, 4, 5, 6, 8, 10, 20, 21], "new_customer_id": 7, "new_data": 7, "new_detail": 7, "new_item": 7, "new_sale_qti": 7, "newlin": [9, 10], "next": [3, 5, 10], "next_custom": 7, "nicknam": 9, "night": 8, "nlp": 1, "nnew": 7, "nnon": 7, "nome": [8, 11], "non": [7, 8], "non_sub_set": 7, "noncommerci": 21, "none": [6, 9], "nonetyp": 8, "norigin": 8, "norvig": 20, "nosql": 1, "notabl": 3, "note": 7, "notif": 7, "novo_atributo": 11, "now": [3, 8, 10], "np": 9, "nprocess": 6, "nset": 7, "nsort": 9, "nsub": 7, "nthi": 10, "ntropic": 7, "num": [7, 9], "num1": 8, "num2": 8, "num3": 8, "num_str": 10, "number": [1, 2, 4, 6, 9, 10], "numbers_list": 9, "numbers_tupl": 9, "numer": [3, 9], "numpi": [2, 3, 7, 9], "o": [7, 8, 10, 20], "obj": 11, "object": [2, 4, 9, 10, 11], "obvious": 8, "occup": [7, 9], "occur": 10, "occurr": 8, "ocurr": 7, "odd": [6, 7, 8, 9], "odd_numb": 8, "offer": [3, 7, 8, 9, 10, 21], "offici": 9, "offlin": 3, "often": [1, 3, 6, 7, 9], "oitldwaaqbaj": 20, "ok": 6, "old": [6, 7, 8, 9, 10], "older": 8, "onc": [3, 7, 9], "one": [2, 4, 6, 8, 9], "ones": [7, 9], "onli": [3, 6, 8, 9, 10, 21], "onlin": 3, "onto": 7, "oop": 11, "op": 7, "open": [3, 7, 10, 21], "opencv": 2, "oper": [1, 9, 10, 11], "operand": 8, "opportun": 1, "optim": [1, 7], "option": [3, 6, 7, 9, 10], "optuna": 2, "orang": 7, "order": 9, "oreilli": 20, "organ": [1, 7, 9], "orient": 11, "origin": [2, 4, 8, 9], "origin_dist": [2, 4], "original_dict": 7, "other": [3, 6, 9, 21], "other_detail": 9, "our": [2, 4], "out": [2, 4, 5, 21], "outlin": 6, "output": [2, 3, 4, 6, 7, 8, 9, 11], "over": [3, 6, 7, 8, 10], "overflowerror": 7, "overkil": 9, "overridden": 9, "overview": [2, 4], "overwhelm": 1, "own": [8, 21], "p": [0, 2, 4, 20], "p001": 7, "p002": 7, "pack": 7, "packag": [3, 7], "package_nam": 9, "pad": 10, "page": 21, "paid": 3, "pair": [2, 4, 9], "panda": [2, 3, 9], "paradigm": 11, "paramet": [], "parameter1": 9, "parameter2": 9, "parenthes": [7, 8, 9], "pari": 9, "pariti": 8, "part": [2, 4, 7, 8, 9], "particip": 3, "particularli": 3, "pass": [2, 4, 6, 9, 10, 11], "passport": 8, "password": 7, "path": [1, 6], "pattern": [1, 2, 4], "pattern_1": 6, "pattern_2": 6, "paulo": 8, "pearson": 20, "penalti": [2, 4], "peopl": 9, "per": 7, "percentag": 1, "perfect": 3, "perfom": [2, 4], "perform": [1, 2, 3, 4, 7, 8, 9, 10], "period": 9, "persist": 3, "person": [2, 4, 6, 7, 9], "person_detail": 9, "person_info": 7, "phone": [1, 7], "pi": [2, 4, 8, 9], "pick": 9, "piec": [1, 7], "pillar": [1, 6], "pip": 0, "pipelin": 1, "place": [8, 10], "placehold": [9, 10], "plai": [1, 4], "platform": 3, "pleas": [7, 8, 10], "pleasant": [6, 8], "plenti": 6, "plot": 9, "plu": 9, "point": [1, 2, 4, 7, 8, 9, 10, 21], "pollut": 9, "polymorph": 11, "popleft": 7, "popped_item": 7, "popul": 7, "popular": [3, 9], "portfolio": 21, "posit": [6, 7, 8, 10], "possibl": [1, 2, 4, 5, 7, 8, 9], "post": 1, "potenti": 7, "power": [1, 3, 5, 6, 7, 8, 9, 10], "practic": [3, 9], "prc": 8, "pre": [1, 3], "preced": 9, "precis": [7, 8, 10], "preco": 8, "predefin": 9, "predict": [1, 2, 3, 4, 20], "prefer": [2, 8], "prefix": [8, 9, 10], "prepar": [1, 7], "preprocess": 21, "presenc": 8, "present": [1, 8], "press": [5, 20], "prevent": [3, 8, 9, 10], "previou": [1, 6], "previous": 1, "price": [4, 7, 8, 9, 10], "primari": 7, "primarili": [3, 7], "prime": 7, "primit": 7, "principl": [7, 21], "print": [2, 4, 5, 6, 7, 8, 11], "prioriti": 3, "privaci": 3, "pro": 3, "probabl": [2, 4], "problem": [1, 2, 4], "proce": 6, "process": [0, 1, 2, 3, 4, 6, 7, 9, 10, 20, 21], "prod": 8, "produc": 9, "product": [1, 8, 9, 10], "produto": 8, "profession": [1, 9, 21], "profici": 1, "profil": 7, "progam": 21, "program": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21], "programm": 11, "progress": 3, "project": [1, 3, 4, 9, 11, 20, 21], "promot": 8, "prompt": [7, 10], "prone": 6, "properti": 7, "propos": [2, 4], "prototyp": 3, "provid": [1, 2, 3, 4, 6, 9, 10, 21], "public": [3, 9, 11], "pull": 0, "purchas": 7, "purpos": [1, 7, 9], "push": [0, 7], "py": [5, 7], "pypi": 9, "python": [1, 2, 5, 6, 20, 21], "python3": [5, 7], "pytorch": [1, 2, 3], "qty": 7, "quantiti": 7, "quantity_sold": 7, "question": [2, 4, 6], "queue_act": 7, "quick": [3, 9], "quickli": 9, "quit": 3, "quot": [8, 9, 10], "quotient": 8, "r": [0, 1, 2, 3, 4, 7, 8, 20], "radiu": [2, 4, 9], "rain": 8, "rais": [8, 9], "ram15": 20, "ramalho": [11, 20, 21], "rand_i": [2, 4], "rand_x": [2, 4], "random": [2, 4, 9], "randomli": [2, 4], "rang": [2, 4, 6, 7, 8], "rapid": 3, "rapidli": 1, "rather": 1, "raw": 1, "raw_input": 7, "re": [3, 21], "read": [7, 8, 9, 10, 11], "readabl": [6, 7, 8, 9, 10], "readi": [1, 3, 9, 21], "real": [1, 2, 3, 4], "realism": 7, "reason": [2, 4], "receiv": [2, 4, 9, 10], "recent": 7, "recogn": 8, "recognit": 4, "recommend": [1, 6, 7, 8, 9, 10], "record": [1, 7], "record_sal": 7, "recoveri": 6, "red": 7, "reduc": 11, "refer": [1, 3, 7, 9, 11], "refin": 6, "reflect": 9, "regress": 1, "regular": 9, "reilli": 20, "reinforc": [2, 4, 20], "reinstal": 3, "reinvent": 9, "relat": 1, "relationship": [1, 2, 4], "releas": 11, "release_year": 9, "reli": [2, 4], "remaind": [], "rememb": [7, 8], "remov": [3, 8], "repeat": [6, 9], "repeatedli": 6, "replac": [7, 8, 9], "report": [1, 7, 10], "repositori": [3, 9], "repres": [7, 8, 9], "represent": [8, 9], "reproduc": 3, "request": [0, 6, 7], "requir": [0, 1, 2, 3, 4, 7, 10], "research": [1, 3], "reset": 3, "resolut": 11, "resolv": [8, 11], "resourc": [3, 6], "respect": [2, 4], "respons": [1, 2, 4], "rest": 6, "result": [3, 8, 9, 10], "result_addit": 8, "result_addition_float": 8, "result_divis": 8, "result_exact_divis": 8, "result_exp": 8, "result_exp_cub": 8, "result_exp_float": 8, "result_integer_divis": 8, "result_integer_division_float": 8, "result_modulo": 8, "result_multipl": 8, "result_multiplication_float": 8, "result_subtract": 8, "result_subtraction_float": 8, "retriev": 7, "return": [6, 8, 10], "return_valu": 9, "reus": 9, "reusabl": 9, "revenu": 7, "review": 7, "reward": [2, 4], "rich": 7, "right": [1, 3, 7, 8, 9], "rightarrow": [2, 4], "rigid": 1, "ring": 7, "risk": 9, "robert": 7, "robot": [2, 4], "robust": [3, 9], "rossum": 11, "round": 8, "row": 1, "rrn20": 20, "rstrip": 8, "rule": 8, "run": [3, 5, 7, 10], "runtim": [3, 11], "russel": [2, 4, 20, 21], "s001": 7, "sa": 21, "safe": 7, "sagan": 7, "said": [2, 4, 10], "salari": 7, "sale": [1, 7], "sales_transact": 7, "same": [3, 6, 9, 10], "samuel": [2, 4], "save": [3, 5], "sb18": 20, "scala": 1, "scale": [1, 3], "scenario": 10, "scienc": [3, 5, 7, 9], "scientif": [3, 5, 7, 8], "scientist": [3, 21], "scikit": 3, "scipi": [2, 3], "sckit": 2, "scope": 7, "screwdriv": 9, "script": [5, 7, 9], "scturecur": 7, "seaborn": 2, "seamless": 3, "seamlessli": [3, 21], "searchabl": 1, "second": [6, 9, 10, 20], "second_condit": 6, "section": [4, 5, 21], "secur": 1, "see": [2, 4, 6, 8, 9, 21], "seek": [2, 4], "segment": 4, "select": [5, 7], "self": [7, 11], "sell": 7, "send": 9, "sensit": 8, "sensor": 1, "sent": 10, "sentenc": 10, "sentiment": 4, "sep": [9, 10], "separ": [1, 2, 4, 7, 9, 10], "sequenc": [6, 7, 8, 9], "sequenti": [2, 4], "seri": [6, 9, 20], "seriou": 7, "serv": [1, 5, 7, 9, 21], "served_custom": 7, "server": [3, 6], "servic": 7, "session": 3, "set": [1, 2, 3, 4, 8, 9, 21], "set_a": 7, "set_b": 7, "set_c": 7, "set_even": 7, "set_i": 7, "set_odd": 7, "set_prim": 7, "set_x": 7, "setup": 3, "sever": [3, 6, 7, 9, 10, 11], "sex": 7, "shap": 2, "share": [3, 7], "shareabl": 3, "sharealik": 21, "sharpen": 21, "sheer": 1, "shell": 7, "shift": [5, 7], "shine": 6, "shirt": 8, "short": [6, 9], "shortcut": 5, "should": 9, "show": 7, "show_user_info": 9, "shrink": 7, "side": [2, 3, 4], "sign": [7, 8], "signific": 3, "similar": [1, 3, 7, 8, 10], "simpl": [1, 3, 5, 7, 8, 10, 20], "simpli": [8, 9, 10, 21], "simplifi": 3, "simul": [2, 4, 7], "sinc": [6, 10], "singl": [5, 6, 8, 9, 10, 11], "single_item_tupl": 7, "site": 7, "situat": 11, "size": [2, 3, 4], "skill": [1, 7, 21], "skip": 6, "slice": [7, 8], "slide": 7, "slightli": 9, "slow": 7, "slower": 9, "small": 9, "smaller": [3, 9], "smallest": 9, "snippet": 5, "so": [1, 2, 4, 6], "social": 1, "softwar": [1, 21], "sold": 7, "solidifi": 21, "solut": [1, 2, 4], "solv": [1, 2, 4], "some": [1, 2, 3, 4, 7, 8, 9, 11], "someon": 1, "someth": [6, 8], "sometim": [2, 3, 4, 6, 9], "sort": [1, 9], "sorted_book": 7, "sorted_book_sal": 7, "sorted_by_ag": 9, "sorted_genre_sal": 7, "sourc": [0, 1, 3, 9, 21], "sp": 10, "space": [3, 5, 7, 9, 10], "spam": [2, 4], "span": 8, "spark": [1, 2, 20], "special": [1, 7, 8, 9, 10], "specif": [1, 3, 6, 8, 9, 10], "specifi": [6, 10], "speech": [2, 4], "speed": [5, 9], "springer": 20, "spyder": 3, "sql": [1, 2, 7], "squar": [2, 4, 6, 7, 8], "square_point": [2, 4], "squares_new": 7, "squares_old": 7, "stai": 5, "standard": 10, "standout": 3, "star": 21, "starch": 20, "start": [1, 3, 5, 6, 7, 8, 9, 10, 11], "startswith": 8, "state": [3, 10], "statement": [9, 10], "statist": [1, 2, 20, 21], "statu": [6, 7], "status_cod": 6, "stdinnotimplementederror": 7, "stdout": [9, 10], "step": [1, 9], "still": [1, 8, 21], "stock": [1, 7, 10], "stop": [6, 9], "storag": 7, "store": [1, 3, 7, 8], "str": [7, 8, 10], "strateg": 1, "strawberri": 7, "stream": [7, 10], "string": [6, 7, 9, 10], "strip": [7, 8], "strong": 1, "strongli": 9, "structur": [2, 4, 8, 10, 11, 21], "student": [6, 7, 8, 9, 10], "student_email": 7, "student_nam": 7, "student_phon": 7, "studi": [2, 4], "style": [8, 11], "sub": 7, "sub_set": 7, "subject": 6, "subject_express": 6, "sublist": 7, "submiss": 3, "subscrib": 21, "subsect": 4, "subsequ": 6, "substanti": 21, "substr": 8, "success": [1, 6], "successfulli": [2, 4, 7], "successor": 11, "suffici": 6, "suffix": 8, "suggest": [1, 21], "suit": 3, "sum": [6, 7, 8], "sum_all_numb": 9, "sum_numb": 9, "summar": [1, 7], "sunni": 8, "superior": 10, "supervis": [2, 4, 21], "support": [1, 7, 8, 11, 21], "suppos": [2, 4], "sure": 1, "sutton": [20, 21], "svm": 1, "swap": 7, "switch": 6, "swv0dwaaqbaj": 20, "sy": [9, 10], "sym_diff": 7, "sym_diff_oper": 7, "symbol": 8, "symmetr": 7, "syntax": [6, 7, 9], "syntaxerror": 9, "system": [1, 7, 11], "s\u00e3o": [8, 10], "t": [1, 2, 3, 4, 6, 8, 9, 10, 20], "tab": [5, 10], "tabl": [1, 7], "tableau": 1, "tag": 1, "take": [1, 3, 6, 9], "talk": 3, "target": [2, 4, 10], "task": [1, 3, 6, 7, 9, 10, 11], "task_stack": 7, "tcolumn2": 10, "tcolumn3": 10, "teach": 3, "techcorp": 9, "technic": 8, "techniqu": 1, "technologi": [1, 11], "teenag": 6, "tell": [2, 4, 6, 9], "temperatur": [6, 8, 10], "tend": 1, "tensor": 3, "tensorflow": [1, 2, 3, 9], "term": 1, "termin": [3, 5, 6, 9], "test": [6, 7], "text": [1, 2, 3, 4, 5, 8, 10], "texto_com_espaco": 8, "than": [1, 3, 6, 7, 8], "thei": [1, 2, 4, 5, 6, 8, 9], "them": [1, 6, 7, 8, 9, 10], "theme": 7, "thi": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 21], "thing": 6, "think": [1, 2, 4, 6, 9, 11], "third": 7, "those": 3, "though": [3, 9], "three": [1, 6, 8, 9], "through": [1, 2, 4, 6, 7, 21], "tibshirani": 20, "tier": 3, "time": [1, 2, 3, 4, 6, 8, 9, 11], "timestamp": 7, "tip": [5, 8], "titl": 7, "tobyt": 7, "todai": [7, 9, 10], "tofil": 7, "togeth": 11, "tolkien": 7, "tom": 20, "too": 7, "tool": [1, 3, 5, 6, 9, 10, 21], "toolbox": 9, "top": [7, 9], "topic": 21, "total": [2, 4, 7, 9], "total_pric": 7, "total_price_for_transact": 7, "total_revenu": 7, "total_sale_valu": 7, "total_sum": 9, "total_volum": 8, "tounicod": 7, "toward": [1, 3, 8], "tpu": 3, "traceback": 7, "track": [3, 7], "tradit": 1, "trail": 7, "train": [1, 2, 3, 4], "transact": [1, 7], "transaction_record": 7, "transform": [1, 21], "translat": 8, "travel": 8, "tread": [2, 4], "tree": 1, "trend": 1, "trial": [2, 4], "trim": 8, "tripl": [8, 9], "tropic": 7, "tropical_fruit": 7, "true": [5, 6, 8, 10], "truli": 6, "truncat": [8, 9], "truth": 8, "try": [1, 2, 4, 7, 10], "tupl": [6, 8, 9], "turn": [1, 4], "two": [5, 6, 8, 9], "txt": [0, 10], "type": [2, 4, 5, 6], "typeerror": 7, "typic": [1, 7, 9], "typo": 21, "u": [5, 7], "uncom": 9, "uncov": [2, 4], "under": 21, "underbrac": [2, 4], "underscor": 8, "understand": [1, 2, 4, 7, 8, 9, 10, 21], "unexpect": 6, "unicod": 7, "uniform": [2, 4], "unindex": 7, "union_oper": 7, "uniqu": 1, "unique_genr": 7, "unit": [3, 7], "univers": 9, "unix": 7, "unknown": [6, 7], "unless": [7, 8], "unlik": [1, 2, 4], "unmanag": 1, "unnam": 9, "unpack": 7, "unravel": 21, "unsupervis": [2, 4, 21], "until": 6, "up": [3, 5, 6, 8, 9], "updat": [3, 6], "update_daily_sales_arrai": 7, "upper": [7, 8], "uppercas": 8, "url": 20, "us": [0, 1, 2, 3, 4, 5, 6, 10, 11], "usag": [7, 10], "user": [3, 6, 7, 8, 9, 10], "user_info": 7, "user_nam": 10, "user_profil": 7, "usernam": 7, "usual": 10, "util": [10, 21], "valid": [7, 8, 10], "valu": [1, 2, 4, 6, 9, 10], "valuabl": [1, 21], "value1": 7, "value2": 7, "valueerror": [9, 10], "van": 11, "vari": 7, "variabl": [2, 3, 4, 6, 9, 10, 11], "variable_valu": 10, "varieti": 1, "variou": [1, 8, 11], "vast": [1, 3, 7], "ve": 6, "vector": 1, "veloc": 1, "venv": 9, "veri": [2, 4, 6, 7, 8, 9], "versatil": [7, 8, 10], "version": [3, 7, 11], "via": 0, "vibrant": 3, "video": 1, "view": [8, 20], "view_inventori": 7, "vision": [1, 2, 4, 21], "visual": [1, 3, 9], "vital": [3, 10], "voic": [2, 4], "volum": [1, 20], "voyag": 21, "w": 10, "wa": [6, 7, 8, 9, 11], "wai": [1, 2, 4, 6, 8, 9, 10, 11], "wait": 7, "want": [2, 4, 9, 10, 11], "warehous": 1, "warn": 7, "water": 6, "we": [1, 2, 3, 4, 6, 8, 9, 10, 21], "web": [1, 3, 9], "welcom": [9, 11, 21], "well": [1, 6, 10], "were": [1, 7], "what": [2, 3, 4, 5, 8, 10, 21], "wheel": 9, "when": [0, 3, 5, 6, 7, 8, 9, 10], "where": [1, 2, 3, 4, 6, 7, 10, 21], "whether": [2, 4, 6, 21], "whi12": 20, "which": [1, 2, 3, 4, 8, 9, 10, 11], "while": [1, 3, 7, 8, 10, 11], "white": [20, 21], "whitespac": 8, "who": 1, "whole": [7, 8, 9], "whose": 9, "why": 7, "wide": [5, 7, 8, 9], "wildcard": 6, "window": [3, 5, 7], "wish": [0, 21], "within": [1, 2, 3, 4, 8, 9, 10], "without": [1, 2, 3, 4, 6, 7, 8, 9], "won": 7, "word": 9, "work": [1, 3, 7, 8, 9, 11], "world": [1, 2, 3, 4, 5, 8, 9, 21], "worri": 9, "would": [2, 4, 6, 8, 9], "woven": 21, "write": [2, 4, 5, 6, 7, 10, 11], "written": [2, 4, 7, 9], "wrong": 7, "www": 20, "x": [2, 4, 6, 8, 9, 11], "xml": 1, "y": [2, 4, 5, 6, 7, 8, 9], "y_i": [2, 4], "ye": [6, 7, 8], "year": [6, 8, 9, 10], "yellow": 7, "yesterdai": 7, "yet": [7, 10], "york": [7, 20], "you": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 21], "your": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 21], "yourself": 9, "youtub": 21, "z": [8, 9], "zaharia": [20, 21], "zero": [3, 7, 8, 10]}, "titles": ["An Introduction to Machine Learning", "<span class=\"section-number\">1.6. </span>Basic Concepts", "<span class=\"section-number\">1.5. </span>Projects", "<span class=\"section-number\">1.7. </span>The Python Environment: Anaconda, Colab, and Kaggle", "<span class=\"section-number\">1. </span>Introduction to Machine Learning", "<span class=\"section-number\">2.1. </span>Basic Syntax", "<span class=\"section-number\">2.3. </span>Conditionals and Loops", "<span class=\"section-number\">2.6. </span>Data Structures in Python", "<span class=\"section-number\">2.2. </span>Built-in Data Types", "<span class=\"section-number\">2.4. </span>Creating Functions in Python", "<span class=\"section-number\">2.5. </span>Input and Output in Python", "<span class=\"section-number\">2. </span>Introduction to Python", "<span class=\"section-number\">3. </span>Big Data", "<span class=\"section-number\">4. </span>Data Preprocessing", "<span class=\"section-number\">5. </span>Supervised Learning", "<span class=\"section-number\">6. </span>Unsupervised Learning", "<span class=\"section-number\">7. </span>Neural Networks", "<span class=\"section-number\">8. </span>Computer Vision", "<span class=\"section-number\">9. </span>Natural Language Processing", "<span class=\"section-number\">10. </span>Large Language Models", "<span class=\"section-number\">11. </span>Bibliography", "An Introduction to Machine Learning"], "titleterms": {"": 7, "1": [6, 9], "2": 9, "3": 7, "4": 7, "7": 7, "8": 7, "As": 7, "If": 7, "It": 7, "No": 9, "The": [2, 3, 4, 6, 7, 8, 9, 10], "To": 0, "ab": 9, "add": 7, "addit": 8, "advanc": 10, "affect": 7, "ai": 2, "alia": 9, "all": [7, 9], "alreadi": 7, "also": 7, "an": [0, 7, 21], "anaconda": 3, "analysi": [1, 2], "analyst": 1, "anoth": 7, "appear": 7, "append": 7, "ar": [6, 7, 9], "arbitrari": [7, 9], "arg": 9, "argument": [7, 9], "arithmet": 8, "arrai": 7, "ascend": 7, "attribut": 7, "avoid": 7, "basic": [1, 5, 8], "best": 10, "bibliographi": 20, "big": [1, 12], "binari": 8, "book": 0, "bool": 8, "boolean": 8, "boston": 2, "both": 7, "bound": 7, "break": 6, "build": 0, "built": [8, 9], "byte": [7, 8], "bytearrai": 8, "can": 7, "career": 1, "case": 6, "cast": 8, "chang": [0, 7], "characterist": 10, "check": [7, 8], "classif": 2, "clear": 7, "cluster": 2, "colab": 3, "colaboratori": 3, "command": 5, "comment": 5, "common": 7, "comparison": 8, "comprehens": 7, "comput": 17, "concept": [1, 6], "conda": 9, "condit": [6, 8], "constant": 7, "contain": 7, "context": 10, "continu": 6, "contribut": 21, "control": 6, "convers": [8, 10], "convert": 7, "copi": 7, "copyright": 21, "core": 7, "correspond": 7, "count": 7, "creat": [7, 8, 9], "custom": 2, "d": 7, "data": [1, 7, 8, 12, 13], "dataset": 2, "deep": [], "def": 9, "default": [7, 9], "default_valu": 7, "default_value_if_not_found": 7, "defin": 9, "definit": [2, 4], "del": 7, "deploi": 0, "descend": 7, "detail": 8, "dictionari": [7, 9], "differ": 7, "difference_upd": 7, "digit": 2, "discard": 7, "disjoint": 7, "displai": 10, "divis": 8, "docstr": 9, "document": 9, "doe": 7, "don": 7, "doubl": 7, "duplic": 7, "dynam": 7, "e": 7, "each": 7, "either": 7, "element": 7, "elif": [6, 8], "els": [6, 8], "empti": 7, "end": 7, "engin": 1, "environ": 3, "error": 7, "escap": 10, "essenti": 9, "evalu": 8, "exact": 7, "exampl": [6, 8, 9], "exist": 7, "explicit": 9, "exponenti": 8, "express": 9, "extend": 7, "f": [7, 8], "fals": 7, "falsi": 8, "first": 7, "fit": [2, 4], "float": [7, 9], "floor": 8, "format": [8, 10], "found": 7, "from": [7, 9], "fromkei": 7, "fromlist": 7, "frozenset": 7, "function": [2, 4, 8, 9, 10], "fundament": 8, "g": 7, "game": 2, "get": [7, 10], "github": 0, "given": 7, "googl": 3, "hadoop": [], "handl": 10, "handwritten": 2, "have": 7, "hous": 2, "how": [0, 9], "http": 0, "i": [0, 7, 10], "ignor": 7, "import": [7, 9], "incorpor": 7, "indent": 5, "index": 7, "indexerror": 7, "input": 10, "insert": 7, "instal": 9, "instead": 7, "int": 9, "integ": 8, "intersect": 7, "intersection_upd": 7, "intro": [], "introduct": [0, 4, 6, 11, 21], "io": 0, "iri": 2, "isdisjoint": 7, "issubset": 7, "issuperset": 7, "item": 7, "item1": 9, "item2": 9, "items": 7, "iter": [7, 9], "its": 7, "joaomh": 0, "jupyt": 5, "kaggl": 3, "kei": [6, 7, 10], "kernel": 3, "keyerror": 7, "keyword": 9, "kwarg": 9, "lambda": 9, "languag": [18, 19], "larg": 19, "last": 7, "learn": [0, 1, 2, 4, 14, 15, 21], "len": 9, "librari": 9, "licens": 21, "like": 7, "line": 5, "list": [7, 9], "liter": 8, "local": 0, "logic": 8, "loop": 6, "machin": [0, 1, 2, 4, 21], "made": 7, "main": 8, "make": [0, 7], "match": 6, "max": 9, "mean": 7, "memoryview": 8, "method": [7, 8], "min": 9, "ml": 0, "model": 19, "modifi": 7, "modul": 7, "module_nam": 9, "modulo": 8, "multipl": 8, "must": [7, 10], "mutabl": 7, "name": 8, "natur": 18, "nest": 7, "network": 16, "neural": 16, "new": 7, "next": 6, "none": [7, 8], "note": 8, "notebook": [3, 5], "notic": 21, "null": 8, "number": [7, 8], "numer": [7, 8, 10], "object": 7, "occurr": 7, "one": 7, "onli": 7, "oper": [7, 8], "operador": 7, "order": [7, 8], "origin": 7, "other": [7, 8], "other_dict_or_iter": 7, "other_set": 7, "otherwis": 7, "out": 7, "output": 10, "overwrit": 7, "packag": 9, "pair": 7, "paradigm": [2, 4], "paramet": [9, 10], "pattern": 6, "pip": 9, "place": [7, 9], "plai": 2, "pop": 7, "popitem": 7, "posit": 9, "practic": 10, "preced": 8, "predict": 7, "preprocess": 13, "prerequisit": 2, "present": 7, "preview": 0, "price": 2, "print": [9, 10], "process": 18, "project": [2, 7], "provid": 7, "python": [3, 7, 8, 9, 10, 11], "queue": 7, "rais": 7, "rang": 9, "recognit": 2, "refer": [8, 21], "referenc": 7, "reflect": 7, "regular": 7, "relat": 8, "remain": 7, "remaind": 8, "remov": 7, "repetit": 6, "replac": 6, "repositori": 0, "requeri": 7, "result": 7, "return": [7, 9], "revers": 7, "revisit": 10, "role": 1, "same": 7, "scienc": 1, "scientist": 1, "second": 7, "segment": 2, "select": 9, "semi": 1, "sentiment": 2, "sequenc": 10, "set": 7, "setdefault": 7, "shallow": 7, "simpl": [6, 9], "sinc": 7, "singl": 7, "size": 7, "skill": 2, "sort": 7, "spark": [], "specif": 7, "specifi": 7, "spotifi": 2, "stack": 7, "standard": [7, 9], "statement": [6, 7], "step": 6, "still": 7, "str": 9, "string": 8, "structur": [1, 6, 7], "subset": 7, "subtract": 8, "sum": 9, "summari": [6, 7], "superset": 7, "supervis": 14, "symmetric_differ": 7, "symmetric_difference_upd": 7, "syntax": 5, "t": 7, "task": [2, 4], "team": 1, "tech": 2, "test": [2, 4], "text": 0, "thei": 7, "thi": [0, 7], "time": 7, "tolist": 7, "track": 2, "true": 7, "truthi": 8, "tupl": 7, "ture": [2, 4], "two": 7, "type": [1, 7, 8, 9, 10], "typecod": 7, "unchang": 7, "uninstal": 9, "unintention": 7, "union": 7, "uniqu": 7, "unlik": 7, "unord": 7, "unpack": 9, "unstructur": 1, "unsupervis": 15, "updat": [0, 7], "upgrad": 9, "us": [7, 8, 9], "usag": 8, "v": 9, "valu": [7, 8], "valueerror": 7, "variabl": 8, "version": 9, "view": 7, "vision": 17, "wai": 7, "we": 7, "what": [6, 9], "where": 9, "which": 7, "while": 6, "why": 9, "within": [6, 7], "x": 7, "you": 7, "your": 9}})